#include <iostream>
#include <iomanip>


using namespace std;



//write a program that multiply two matrices and put the product in a third one

int main()
{
    
    int **A;
    cout << "enter rows and cols of 1st matrix" <<endl;
    int rows1, col1;
    cin >> rows1 >> col1;
    A = new int *[rows1];
    for(int i = 0; i < rows1 ; i++)
        A[i] = new int[col1];

   
    int **B;
    cout << "enter rows and cols of 2nd matrix" << endl;
    int rows2, col2;
    cin >> rows2 >> col2;
    B = new int *[rows2];
    for(int i = 0; i < rows2 ; i++)
        B[i] = new int[col2];
    int **C;
    if(col1 != rows2)
        cout << "ERROR";

    else {
         
        cout << "enter the values of matrix 1" << endl;
        for(int i = 0 ; i < rows1; i ++)
            for (int j = 0; j < col1 ; j++)
                cin >> A[i][j];

        cout << "enter the values of matrix 2" << endl;
        for(int i = 0 ; i < rows2; i ++)
            for (int j = 0; j < col2 ; j++)
            cin >> B[i][j];


        C = new int *[rows1];
        for(int i = 0; i < rows1 ; i++)
            C[i] = new int[col2];

        for(int i = 0 ; i < rows1; i++)
            for(int j = 0 ; j < col2 ; j++)
                {
                    int sum = 0;
                    int counter = 0;
                    while (counter < rows2)
                    {
                        sum += (A[i][counter]* B[counter][j]);
                        counter ++;
                    }
                    C[i][j] = sum;
                }
        cout << endl << endl <<  "the product matrix: " << endl <<endl;
        for(int i = 0 ; i < rows1; i ++)
            {
                for (int j = 0; j < col2 ; j++)
                    cout<< left << setw(7) << C[i][j];
                cout << endl;
            }

    }

        for(int i = 0; i < rows1 ; i++)
            delete[] A[i];
        delete [] A;

        for(int i = 0; i < rows2 ; i++)
            delete[] B[i];
        delete [] B;

        for(int i = 0; i < rows1 ; i++)
            delete[] C[i];
        delete [] C;




    return 0;
}
